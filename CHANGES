Version 0.5.4 - 2016-01-15
    - Add babelrc and fix node invocation in examples
    - Add flow chart
    - Adjust copy
    - Include correct chart image
    Release 0.5.4


Version 0.5.3 - 2016-01-12
    - Update dependency in README
    - Update examples to use npm version of reactorx
    Release 0.5.3


Version 0.5.2 - 2016-01-12
    - Fix npm build step
    Release 0.5.2


Version 0.5.1 - 2016-01-12
    - Remove unneeded dependencies from examples build scripts
    - Update installation instructions (regenerator is taken care of by babel)
    Release 0.5.1


Version 0.5.0 - 2016-01-11
    - Add script to regenerate js-csp > es5 into the src folder
    - Add build script to first babel the src, then regenerate it, for es5 compatibility. The end user still needs to require regenerator
    - Read the js-csp dependency from the local folder rather than modules. The local folder has an es5 compat version of js-csp (generated on the fly from node_modules with regenerator)
    - Ignore some folders
    - Build artifacts
    - Update README
    Release 0.5.0


Version 0.4.2 - 2016-01-08
    - Fix distribution
    - Update version to 0.4.2


Version 0.4.1 - 2016-01-08
    - Adjust examples
    - Remove babel-regenerator-runtime explicit dependency
    - Fix copy
    - Fix the helper function
    - Add unBALANCE real world example
    - Add how to run instructions to all examples
    - Update version to 0.4.1


Version 0.4.0 - 2016-01-08
    - Add packages and settings required for testing environment
    - Add store creation sanity checks
    - Create tests
    - Fix copy
    - Add installation steps and API reference
    - Update api reference
    - Small fixes
    - Fix syntax errors in sample code
    - Replace babel-regenerator-runtime with babel-polyfill, to ensure any other requirements are met (polyfill ensures this)
    - Update README
    - Replace regenerator-runtime with polyfill
    - New dist version
    - Create universal app example
    - Make adjustement to async example (reduce amount of boilerplate in the toolchain)
    - Update package version


Version 0.3.1 - 2016-01-06
    - Fix async example
    - Fix todos example
    - Update package to 0.3.1


Version 0.3.0 - 2016-01-06
    - Receive the actions as a single object, the keys (function names) are iterated to create a proxy object for the internal dispatch mechanism
    - Add a combineAction function to merge all user defined functions into a single object (helper function)
    - Update the async example
    - Update the counter demo
    - Update the todos demo
    - Update README
    - Fix example in folder and README
    - Update package to 0.3.0


Version 0.2.0 - 2016-01-06
    - Remove build artifact
    - Hide the dispatch implementation, it lives inside the store now. Now the user of the store can calls functions directly, without going through a dispatch
    - Ignore log files
    - Update example to reflect the new api
    - Move CHANGES and VERSION files to the proper location


Version 0.1.0 - 2016-01-06
    Initial commit
    - Include dist folder
    - Export an object rather than a function
    - Check that callback is actually instantiated, before calling it
    - Remove old code (commented out)
    - Add async example
    - Add counter example
    - Add TodoMVC example
    - Initial README
    - Ignore .out files


